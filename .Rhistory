data <- read.csv("2010_6차_직접측정")
data <- read.csv("2010_6차_직접측정", head = T)
read.excel
install.packages("readxl")
library(readxl)
library(readxl)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_3차원 형상 측정 데이터.xlsx")
View(data)
View(data)
data2 <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
head(data)
View(data)
View(data)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
View(data)
data <- read.csv("2010_6차_직접측")
data <- read.csv("2010_6차_직접측")
data <- read_xls("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
data <- read_xls("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx")
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남자")
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성")
View(data)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성",col_names = TRUE)
data
View(data)
library(readxl)
install.packages("readxl")
install.packages("readxl")
View(data)
library(readxl)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성",col_names = TRUE)
View(data)
install.packages("xlsx")
library(xlsx)
read.xlsx("2010_6차_직접측정 데이터.xlsx")
read.xlsx("2010_6차_직접측정 데이터.xlsx",1)
data <- read.xlsx("2010_6차_직접측정 데이터.xlsx",1)
library(RJavaTools)
install.packages("RJavaTools")
data <- read.xlsx("2010_6차_직접측정 데이터.xlsx",2)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성")
View(data)
dat <- read.csv("2010_6차_직접측정")
dat <- read.csv("2010_6차_직접측정")
dat <- read.csv("2010_6차_직접측정")
dat <- read.csv("2010_6차_직접측정", header = T)
dat <- read.csv(file = "D:/Workspace/R-Statistics/2010_6차_직접측정.xlsx" , header = T)
dat <- read.csv(file = "D:/Workspace/R-Statistics/2010_6차_직접측정.xlsx" , header = T)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성")
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성")
library(readxl)
data <- read_excel("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.xlsx",
sheet = "남성")
View(data)
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt")
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt")
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt", header = T)
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt", header = F)
View(data)
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt", header = T)
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt", header = T, sep="  ")
read.table("D:/Workspace/R-Statistics/2010_6차_직접측정 데이터.txt", header = T, sep="  ")
pt(1,1)
pt(0,1)
pt(2,1)
pt(3,1)
1-pt(3,1)
1-pt(1.96,1)
pt(1.96,1)
pt(-1.645,1)
pt(-1.96,1)
pt(-2.58,1)
pt(-2.581111111111111111,1)
pt(-2.58,1)
dat <- read.csv(file = "2010_6차_직접측정 데이터.csv" , header = T)
read.csv("2010_6차_직접측정남자.csv")
data <- read.csv("2010_6차_직접측정남자.csv")
View(data)
data <- read.csv("2010_6차_직접측정남자.csv")
View(data)
height <- height.p[sample(length(height.p),15)]
tmp <- subset(data, data$나이 == 7)
height <- tmp$x104.키
height <- height.p[sample(length(height.p),15)]
height.p <- tmp$x104.키
height <- height.p[sample(length(height.p),15)]
data <- read.csv("2010_6차_직접측정남자.csv")
tmp <- subset(data, data$나이 == 7)
height.p <- tmp$x104.키
height <- height.p[sample(length(height.p),15)]
height.p <- tmp$X104.키
height <- height.p[sample(length(height.p),15)]
qt(0.975,14)
t.test(height, mu=1220)
View(tmp)
height <- height.p[sample(length(height.p),15)]
t.test(height, mu=1220)
height <- height.p[sample(length(height.p),15)]
t.test(height, mu=1220)
height <- height.p[sample(length(height.p),15)]
t.test(height, mu=1220)
height <- height.p[sample(length(height.p),15)]
t.test(height, mu=1220)
height <- height.p[sample(length(height.p),15)]
t.test(height, mu=1220)
dataa <- read.csv(age.date)
dataa <- read.csv("age.date.cvs")
dataa <- read.csv("age.date.csv")
dataa <- read.csv("age.data.csv")
names <- c("time", "gender","weight","munutes")
tmp <- subset(dataa, gender ==1)
names(dataa) <- c("time", "gender","weight","munutes")
tmp <- subset(dataa, gender ==1)
allpha <- 0.05
n<-length(weights)
c.u <- qt(1-allpha, df=n-1)
c.u <- qt(1-allpha, df=n-1)
n<-length(weights)
allpha <- 0.05
c.u <- qt(1-allpha, df=n-1)
weight <- tmp[3]
View(weight)
c.u <- qt(1-allpha, df = n-1)
names(dataa) <- c("time", "gender","weight","munutes")
dataa <- read.csv("age.data.csv")
names(dataa) <- c("time", "gender","weight","munutes")
tmp <- subset(dataa, gender == 1)
n<-length(weights)
weight <- tmp[3]
allpha <- 0.05
c.u <- qt(1-allpha, df = n-1)
c.u <- qt(0.95, df = n-1)
n<-length(weights)
n
n<-length(weight)
weight <- tmp[3]
allpha <- 0.05
c.u <- qt(0.95, df = n-1)
weight <- tmp[3]
n<-length(weight)
View(weight)
n
data <- read.csv("age.data.csv")
names(data) <- c("time", "gender","weight","munutes")
tmp <- subset(dataa, gender == 1)
weight <- tmp[3]
n <- length(weight)
weight <- tmp[3]
tmp <- subset(dataa, gender == 1)
tmp <- subset(data, gender == 1)
weight <- tmp[3]
n <- length(weight)
c.u <- qt(0.95, df = n-1)
allpha <- 0.05
c.u <- qt(0.95, df = n-1)
library(stats)
c.u <- qt(0.95, df = n-1)
library(stats)
library(TDist)
install.packages("TDist")
c.u <- qt(0.95, df = n-1)
weight <- tmp[[3]]
data <- read.csv("age.data.csv")
names(data) <- c("time", "gender","weight","munutes")
tmp <- subset(data, gender == 1)
weight <- tmp[[3]]
n <- length(weight)
allpha <- 0.05
c.u <- qt(0.95, df = n-1)
c.u
c.u <- qt(1-allpha, df = n-1)
c.u
t.test(weight, mu = 2800)
data
read.table("restitution.txt")
data <- read.table("restitution.txt")
n <- length(data)
rel <- ifelse(data$V1 < 0.4134 | data$V1 > 0.4374, 1 ,0)
data <- read.table("restitution.txt", header = T)
rel <- ifelse(data$V1 < 0.4134 | data$V1 > 0.4374, 1 ,0)
rel
rel <- ifelse(data$rst < 0.4134 | data$rst > 0.4374, 1 ,0)
prop.test( = 1000 , p = 430/1000)
prop.test(n = 1000 , p = 430/1000)
prop.test(x=430,n = 1000 , p = 430/1000)
c <- c(980,1008,968,1032,1012,996,1021,1002,996,1017)
c
data.frame(c)
class(c)
t.test(c, mu=1000)
c1 <- c(58,49,39,99,32,88,62,30,55,65,44,55,5,7,53,88,42,39)
data.frame(c1)
class(c1)
t.test(c, mu=55)
c2 <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
data.frame(c2)
class(c2)
t.test(c1, mu=55)
t.test(c1, mu=55)
#귀무가설 : 섭취량이 같다, 대립가설 : 섭취량이 달라졌다.
t.test(c2, mu=8.1)
t.test(c, mu=1000)
t.test(c1, mu=55)
t.test(c2, mu=8.1)
prop.test(n = 100, p = 0.5)
prop.test(x="",n = 100, p = 0.5)
prop.test(x=430, n = 1000 , p = 430/1000)
prop.test(x=430, n = 1000 , alternative = "greater", correct = FALSE)
prop.test(x=430, n = 1000 , alternative = "greater", correct = FALSE)
430/1000
prop.test(x=100, p = 4/5 , alternative = "greater", correct = FALSE)
prop.test(x=100*4/5, n=100 , alternative = "greater", correct = FALSE)
#귀무가설 : 선호한다. ,  대립가설 : 선호하지 않는다.
prop.test(x=100*4/5, n=100 , alternative = "greater", correct = FALSE)
#귀무가설 : 선호한다. ,  대립가설 : 선호하지 않는다.
prop.test(x=100*(4/5), n=100 , alternative = "greater", correct = FALSE)
100*(4/5)
prop.test(x=100*(4/5), n=100 , alternative = "greater", correct = FALSE)
prop.test(p = 0.5)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, alternative = "greater", correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 , alternative = "greater", correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 , alternative = "greater", correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, alternative = "greater", correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , alternative = "greater", correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , alternative = "greater", correct = FALSE, conf.level = 0.90)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, alternative = "greater", correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 , alternative = "greater", correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, alternative = "greater", correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 , alternative = "greater", correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , alternative = "greater", correct = FALSE, conf.level = 0.90)
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
9.547 * 10^-6
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 모집단과 같다, 대립가설 모집단과 다르다.
t.test(c, mu=1000)
#귀무가설 : 성적이 오르지 않았다, 대립가설 : 성적이 올랐다.
t.test(c1, mu=55)
#귀무가설 : 섭취량이 같다, 대립가설 : 섭취량이 달라졌다.
t.test(c2, mu=8.1)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 모집단과 같다, 대립가설 모집단과 다르다.
t.test(c, mu=1000)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
#귀무가설 모집단과 같다, 대립가설 모집단과 다르다.
t.test(c, mu=1000)
#귀무가설 : 성적이 오르지 않았다, 대립가설 : 성적이 올랐다.
t.test(c1, mu=55)
#귀무가설 : 섭취량이 같다, 대립가설 : 섭취량이 달라졌다.
t.test(c2, mu=8.1)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.5. ,  대립가설 : p!=0.5.
prop.test(x=5, n=10, correct = FALSE)
#귀무가설 : p=0.8. ,  대립가설 : p!=0.8.
prop.test(x=100*(4/5), n=100 ,correct = FALSE)
#귀무가설 : p=0.43 , 대립가설 p != 0.43
prop.test(x=430, n = 1000 , correct = FALSE, conf.level = 0.90)
c <- c(980,1008,968,1032,1012,996,1021,1002,996,1017)
data.frame(c)
class(c)
#귀무가설 모집단과 같다, 대립가설 모집단과 다르다.
t.test(c, mu=1000)
c1 <- c(58,49,39,99,32,88,62,30,55,65,44,55,5,7,53,88,42,39)
data.frame(c1)
class(c1)
#귀무가설 : 성적이 오르지 않았다, 대립가설 : 성적이 올랐다.
t.test(c1, mu=55)
c2 <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
data.frame(c2)
class(c2)
#귀무가설 : 섭취량이 같다, 대립가설 : 섭취량이 달라졌다.
t.test(c2, mu=8.1)
#귀무가설 : 성적이 오르지 않았다, 대립가설 : 성적이 올랐다.
t.test(c1, mu=55, alternative = "greater")
#귀무가설 : 성적이 오르지 않았다, 대립가설 : 성적이 올랐다.
t.test(c1, mu=55, alternative = "less")
#귀무가설 : 성적이 오르지 않았다, 대립가설 : 성적이 올랐다.
t.test(c1, mu=55, alternative = "less")
