a6 <- filter(a5, day == "월요일")
a7 <- filter(a5, day == "화요일")
a1[,-5]
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a7 <- filter(a5, day == "화요일")
a8 <- filter(a5, day == "수요일")
a9 <- filter(a5, day == "목요일")
a10 <- filter(a5, day == "금요일")
a11 <- filter(a5, day == "토요일")
a12 <- filter(a5, day == "일요일")
shapiro.test(a6$score)
qqnorm(a6$score) ; qqline(a6$score)
shapiro.test(a7$score)
qqnorm(a7$score) ; qqline(a7$score)
shapiro.test(a8$score)
qqnorm(a8$score) ; qqline(a5$score)
shapiro.test(a9$score)
qqnorm(a9$score) ; qqline(a9$score)
shapiro.test(a10$score)
qqnorm(a10$score) ; qqline(a10$score)
shapiro.test(a11$score)
qqnorm(a11$score) ; qqline(a11$score)
shapiro.test(a12$score)
qqnorm(a12$score) ; qqline(a12$score)
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a7 <- filter(a5, day == "화요일")
a8 <- filter(a5, day == "수요일")
a9 <- filter(a5, day == "목요일")
a10 <- filter(a5, day == "금요일")
a11 <- filter(a5, day == "토요일")
a12 <- filter(a5, day == "일요일")
shapiro.test(a6$score)
qqnorm(a6$score) ; qqline(a6$score)
shapiro.test(a7$score)
qqnorm(a7$score) ; qqline(a7$score)
shapiro.test(a8$score)
qqnorm(a8$score) ; qqline(a5$score)
shapiro.test(a9$score)
qqnorm(a9$score) ; qqline(a9$score)
shapiro.test(a10$score)
qqnorm(a10$score) ; qqline(a10$score)
3. 요일별 평점 차이
```{r}
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a7 <- filter(a5, day == "화요일")
a8 <- filter(a5, day == "수요일")
a9 <- filter(a5, day == "목요일")
a10 <- filter(a5, day == "금요일")
a11 <- filter(a5, day == "토요일")
a12 <- filter(a5, day == "일요일")
shapiro.test(a6$score)
qqnorm(a6$score) ; qqline(a6$score)
shapiro.test(a7$score)
qqnorm(a7$score) ; qqline(a7$score)
shapiro.test(a8$score)
qqnorm(a8$score) ; qqline(a5$score)
shapiro.test(a9$score)
qqnorm(a9$score) ; qqline(a9$score)
shapiro.test(a10$score)
qqnorm(a10$score) ; qqline(a10$score)
shapiro.test(a11$score)
qqnorm(a11$score) ; qqline(a11$score)
shapiro.test(a12$score)
qqnorm(a12$score) ; qqline(a12$score)
```
정규성을 따르지 않는다.
#H0 : 분산 차이가 없다.
#H1 : 분산 차이가 있다.
```{r}
library(XML)
levene.test(a5$score,a5$day)
bartlett.test(score~day,a5)
```
#분산 차이가 있다.
qqnorm(a10$score) ; qqline(a10$score)
a5 <- a1
a6 <- filter(a5, day == "월요일")
a5 <- a1
a6 <- filter(a5, day == "월요일")
head(a1)
a1
h1
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a6
a5 <- a1[,-5]
a5
data <- read.csv("D:/Workspace/R-Statistics/gaga.csv")
data1 <- data[,3]
reviews <- str_replace_all(data1, "\\W", " ")
reviews <- str_trim(reviews)
nouns <- extractNoun(reviews)
nouns1 <- unlist(nouns)
head(unlist(nouns1), 30)
nouns2 <- gsub("\\d+", "", nouns1)
nouns2 <- gsub(" ", "", nouns2)
nouns2 <- gsub('[ㄱ-ㅎ]','',nouns2)
nouns2 <- gsub('[~!@#$%&*()_+=?<>^]','',nouns2)
nouns2 <- gsub('(ㅜ|ㅠ)','',nouns2)
nouns2 <- gsub('^','',nouns2)
nouns2 <- gsub('영화','',nouns2)
nouns3 <- Filter(function(x) {nchar(x) <= 10}, nouns2)
nouns3 <- Filter(function(x) {nchar(x) >= 2}, nouns3)
data5 <- table(nouns3)
data6 <- data.frame(data5)
data7 <- arrange(data6, desc(data6$Freq))
data8 <- head(data7, 1000)
wordcloud2(data8)
data
head(data)
class(data$score)
a1 <- data
a1 <- data[,c(2,5)]
a1$time1<- str_sub(a1$time,-5,-1)
a1$week1<- str_sub(a1$time, end = -7)
a1$week2 <- strptime(a1$week1, "%Y.%m.%d")
a1$day <- weekdays(a1$week2)
a1$score <- as.numeric(a1$score)
class(a1$score)
class(a1$time)
class(a1$time1)
class(a1$week2)
class(a1$day)
g1 <- a1
h1 <- a1
head(a1)
a1 <- a1[,-5]
sum(is.na(a1))
a1[!complete.cases(a1),]
a1 <- a1[-c(927,932),]
sum(is.na(a1))
head(a1)
#-------------------------------------------- 요일별 평점
a2 <- aggregate(score~day,a1,mean)
class(a2$day)
a3 <- cbind(a2, day2 = c("5.금요일",
"4.목요일",
"3.수요일",
"1.월요일",
"7.일요일",
"6.토요일",
"2.화요일"))
a3
ggplot(a3, aes(x = day2, y = score)) +
geom_bar(stat='identity') + ylim(c(0,10)) + ylab("평점") + xlab("요일") +
ggtitle("요일별 평점")
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a7 <- filter(a5, day == "화요일")
a8 <- filter(a5, day == "수요일")
a9 <- filter(a5, day == "목요일")
a10 <- filter(a5, day == "금요일")
a11 <- filter(a5, day == "토요일")
a12 <- filter(a5, day == "일요일")
shapiro.test(a6$score)
qqnorm(a6$score) ; qqline(a6$score)
shapiro.test(a7$score)
qqnorm(a7$score) ; qqline(a7$score)
shapiro.test(a8$score)
qqnorm(a8$score) ; qqline(a5$score)
shapiro.test(a9$score)
qqnorm(a9$score) ; qqline(a9$score)
shapiro.test(a10$score)
qqnorm(a10$score) ; qqline(a10$score)
shapiro.test(a11$score)
qqnorm(a11$score) ; qqline(a11$score)
shapiro.test(a12$score)
qqnorm(a12$score) ; qqline(a12$score)
#H0 : 분산 차이가 없다.
#H1 : 분산 차이가 있다.
library(XML)
levene.test(a5$score,a5$day)
bartlett.test(score~day,a5)
#분산 차이가 있다.
#H0 : 요일별 평점이 차이가 없다.
#H1 : 요일별 평점이 차이가 있다.
class(a4$day2)
a4 <- a3
a4$day2 <- as.character(a4$day2)
anova(lm(score~day2,a4))
summary(anova(lm(score~day2,a4)))
#H1 : 요일별 평점이 차이가 있다.
#-------------------------------------------- 사간별 평점
head(g1)
g1 <- g1[-c(927,932),]
sum(is.na(g1))
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g2 <- aggregate(score~time3, g1, mean)
ggplot(g2, aes(x = time3, y = score, group = 1)) +
geom_bar(stat='identity') + ylim(c(0,10)) + ylab("평점") + xlab("시간") +
ggtitle("시간때 별 평점")
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a5 <- a1[,-5]
a6 <- filter(a5, day == "월요일")
a5 <- a1[,-5]
a5
#-------------------------------------------- 요일별 평점
a2 <- aggregate(score~day,a1,mean)
a2
a1 <- a1[,-5]
sum(is.na(a1))
a1[!complete.cases(a1),]
a1 <- a1[-c(927,932),]
sum(is.na(a1))
head(a1)
#-------------------------------------------- 요일별 평점
a2 <- aggregate(score~day,a1,mean)
head(a1)
#-------------------------------------------- 요일별 평점
a2 <- aggregate(score~day,a1,mean)
class(a2$day)
#-------------------------------------------- 요일별 평점
a2 <- aggregate(score~day,a1,mean)
class(a2$day)
a1$day <- weekdays(a1$week2)
data
head(data)
class(data$score)
a1 <- data
a1 <- data[,c(2,5)]
a1$time1<- str_sub(a1$time,-5,-1)
a1$week1<- str_sub(a1$time, end = -7)
a1$week2 <- strptime(a1$week1, "%Y.%m.%d")
a1$day <- weekdays(a1$week2)
a1
a5 <- k1[,-5]
k1 <- a1
a5 <- k1[,-5]
a6 <- filter(a5, day == "월요일")
a5
anova(lm(score~day,a5))
g1 <- g1[-c(927,932),]
g5 <- g1[,c(1,8)]
k1
k1
g1 <- g1[-c(927,932),]
sum(is.na(g1))
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g5 <- g1[,c(1,8)]
g5
g6 <- filter(g1, time3 == 1)
head(g1)
g1 <- g1[,-c(5,7)]
g1
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g1 <- g1[,-c(5,7)]
g29 <- filter(g1, time3 == 24)
g29 <- filter(g1, time3 == 24)
g29 <- filter(g1, time3 == 24)
g28 <- filter(g1, time3 == 23)
qqnorm(g28$score) ; qqline(g28$score)
g28 <- filter(g1, time3 == 23)
g6 <- filter(g1, time3 == 1)
g1
g1 <- g1[-c(927,932),]
sum(is.na(g1))
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g6 <- filter(g1, time3 == 1)
head(g1)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g7 <- filter(g1, time3 == 2)
qqnorm(g7$score) ; qqline(g7$score)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g7 <- filter(g1, time3 == 2)
g6 <- filter(g1, time3 == 1)
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g1 <- g1[,-c(5,7)]
g6 <- filter(g1, time3 == 1)
qqnorm(g6$score) ; qqline(g6$score)
g7 <- filter(g1, time3 == 2)
qqnorm(g7$score) ; qqline(g7$score)
g8 <- filter(g1, time3 == 3)
qqnorm(g8$score) ; qqline(g8$score)
g9 <- filter(g1, time3 == 4)
qqnorm(g9$score) ; qqline(g9$score)
g10 <- filter(g1, time3 == 5)
qqnorm(g10$score) ; qqline(g10$score)
g11 <- filter(g1, time3 == 6)
qqnorm(g11$score) ; qqline(g11$score)
g12 <- filter(g1, time3 == 7)
qqnorm(g12$score) ; qqline(g12$score)
g13 <- filter(g1, time3 == 8)
g11 <- filter(g1, time3 == 6)
qqnorm(g11$score) ; qqline(g11$score)
g12 <- filter(g1, time3 == 7)
qqnorm(g12$score) ; qqline(g12$score)
g13 <- filter(g1, time3 == 8)
qqnorm(g13$score) ; qqline(g13$score)
g14 <- filter(g1, time3 == 9)
qqnorm(g14$score) ; qqline(g14$score)
g15 <- filter(g1, time3 == 10)
qqnorm(g15$score) ; qqline(g15$score)
g16 <- filter(g1, time3 == 11)
qqnorm(g16$score) ; qqline(g16$score)
g17 <- filter(g1, time3 == 12)
qqnorm(g17$score) ; qqline(g17$score)
g18 <- filter(g1, time3 == 13)
qqnorm(g18$score) ; qqline(g18$score)
g19 <- filter(g1, time3 == 14)
qqnorm(g19$score) ; qqline(g19$score)
g20 <- filter(g1, time3 == 15)
qqnorm(g20$score) ; qqline(g20$score)
g21 <- filter(g1, time3 == 16)
qqnorm(g21$score) ; qqline(g21$score)
g22 <- filter(g1, time3 == 17)
qqnorm(g22$score) ; qqline(g22$score)
g23 <- filter(g1, time3 == 18)
qqnorm(g23$score) ; qqline(g23$score)
g24 <- filter(g1, time3 == 19)
qqnorm(g24$score) ; qqline(g24$score)
g25 <- filter(g1, time3 == 20)
qqnorm(g25$score) ; qqline(g25$score)
g26 <- filter(g1, time3 == 21)
qqnorm(g26$score) ; qqline(g26$score)
g27 <- filter(g1, time3 == 22)
qqnorm(g27$score) ; qqline(g27$score)
g28 <- filter(g1, time3 == 23)
qqnorm(g28$score) ; qqline(g28$score)
g29 <- filter(g1, time3 == 24)
g29 <- filter(g1, time3 == 24)
qqnorm(g29$score) ; qqline(g29$score)
bartlett.test(score~time3,g1)
#H0 : 시간(1시)간별 평점이 차이가 없다.
#H1 : 시간(1시)간별 평점이 차이가 있다.
anova(lm(score~time3,g2))
summary(anova(lm(score~time3,g2)))
g2
kruskal.test(score~day,a5)
data <- read.csv("D:/Workspace/R-Statistics/gaga.csv")
data1 <- data[,3]
reviews <- str_replace_all(data1, "\\W", " ")
reviews <- str_trim(reviews)
nouns <- extractNoun(reviews)
library(wordcloud2)
library(stringr)
library(rJava)
library(memoise)
library(KoNLP)
library(dplyr)
library(rvest)
library(httr)
library(tm)
library(qgraph)
library(xml2)
library(gtable)
library(HMM)
library(devtools)
library(kospacing)
library(tidyverse)
library(ggplot2)
library(assertthat)
library(utils)
data <- read.csv("D:/Workspace/R-Statistics/gaga.csv")
data1 <- data[,3]
reviews <- str_replace_all(data1, "\\W", " ")
reviews <- str_trim(reviews)
nouns <- extractNoun(reviews)
nouns1 <- unlist(nouns)
data
head(data)
class(data$score)
a1 <- data
a1 <- data[,c(2,5)]
a1$time1<- str_sub(a1$time,-5,-1)
a1$week1<- str_sub(a1$time, end = -7)
a1$week2 <- strptime(a1$week1, "%Y.%m.%d")
a1$day <- weekdays(a1$week2)
k1 <- a1
a1$score <- as.numeric(a1$score)
class(a1$score)
class(a1$time)
class(a1$time1)
class(a1$week2)
class(a1$day)
g1 <- a1
h1 <- a1
head(a1)
a1 <- a1[,-5]
sum(is.na(a1))
a1[!complete.cases(a1),]
a1 <- a1[-c(927,932),]
sum(is.na(a1))
head(a1)
a5 <- k1[,-5]
kruskal.test(score~day,a5)
kruskal.test(score~day,a5)
kruskal.test(core~time3,g2)
#H0 : 시간(1시)간별 평점이 차이가 없다.
#H1 : 시간(1시)간별 평점이 차이가 있다.
anova(lm(score~time3,g1))
g1 <- g1[-c(927,932),]
sum(is.na(g1))
sum(is.na(g1))
g1$time2 <-  strptime(g1$time, format="%Y.%m.%d %H:%M")
g1$time3 <- as.numeric(format(g1$time2, "%H"))
head(g1)
g2 <- aggregate(score~time3, g1, mean)
kruskal.test(score~time3,g2)
levene.test(score,day,a5)
levene.test(score,day,a5)
#H0 : 분산 차이가 없다.
#H1 : 분산 차이가 있다.
library(XML)
levene.test(score,day,a5)
#분산 차이가 있다.
library(lawstat)
install.packages("lawstat")
#분산 차이가 있다.
library(lawstat)
levene.test(a5$score,a5$day,)
levene.test(a5$score,a5$day)
levene.test(g1$score,g1$time3)
levene.test(g1$score,g1$time3)
#H0 : 시간(1시)간별 평점이 차이가 없다.
#H1 : 시간(1시)간별 평점이 차이가 있다.
kruskal.test(score~time3,g2)
summary(anova(lm(score~time3,g1)))
summary(kruskal.test(score~time3,g2))
h3 <- aggregate(score~week1, h3, mean)
h1 <- a1
h1 <- h1[-c(927,932),]
h1$or2 <- as.numeric(h1$time)
h2 <- h1[,-c(5,7)]
h3 <- arrange(h2, or2)
h3 <- aggregate(score~week1, h3, mean)
h4 <- h3 %>%
mutate(co_me = cummean(score))
head(h4)
kruskal.test(score~time3,g2)
qqnorm(g1$score)
qqnorm(g1$score)
wordcloud2(data8)
data5 <- table(nouns3)
head(unlist(nouns1), 30)
nouns2 <- gsub("\\d+", "", nouns1)
nouns2 <- gsub("\\d+", "", nouns1)
nouns2 <- gsub(" ", "", nouns2)
nouns2 <- gsub('[~!@#$%&*()_+=?<>^]','',nouns2)
nouns2 <- gsub('(ㅜ|ㅠ)','',nouns2)
nouns2 <- gsub('^','',nouns2)
nouns2 <- gsub('영화','',nouns2)
nouns3 <- Filter(function(x) {nchar(x) <= 10}, nouns2)
nouns3 <- Filter(function(x) {nchar(x) >= 2}, nouns3)
data5 <- table(nouns3)
data5 <- table(nouns3)
data6 <- data.frame(data5)
data7 <- arrange(data6, desc(data6$Freq))
data8 <- head(data7, 1000)
wordcloud2(data8)
wordcloud2(data8)
wordcloud2(data8)
wordcloud2(data8)
data8 <- head(data7, 500)
wordcloud2(data8)
data8 <- head(data7, 100)
wordcloud2(data8)
data8 <- head(data7, 10)
wordcloud2(data8)
data8 <- head(data7, 30)
wordcloud2(data8)
