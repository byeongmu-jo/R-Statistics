View(data25)
# H0 : 분산의 차이다 없다, H1 : 분산의 차이가 있다
var.test(data20$cty ~ data20$fl)
data20
View(data20)
# H0 : 분산의 차이다 없다, H1 : 분산의 차이가 있다
var.test(data20$cty ~ data20$fl)
data26 <- rbind(data24,data25)
data26
View(data26)
var.test(data20$cty ~ data20$fl)
# H0 : 분산의 차이다 없다, H1 : 분산의 차이가 있다
var.test(data26$cty ~ data26$fl)
t.test(data24$cty, data25$cty,  var.equal = F)
data30 <- filter(data20, data20$class == 'subcompact')
data30
data24 <- filter(data30, data30$drv == 'r')
data25 <- filter(data30, data30$drv == 'p')
data24 <- filter(data20, data20$fl == 'r')
data25 <- filter(data20, data20$fl == 'p')
data31 <- filter(data30, data30$drv == 'r')
data32 <- filter(data30, data30$drv == 'p')
var.test(data30$cty ~ data30$drv)
data33 <- rbind(data31, data32)
# H0 : 분산의 차이다 없다, H1 : 분산의 차이가 있다
var.test(data33$cty ~ data33$drv)
data33
View(data33)
data31
View(data31)
View(data32)
data32
data32 <- filter(data30, data30$drv == 'p')
data32 <- filter(data30, data30$drv == 'f')
data33 <- rbind(data31, data32)
var.test(data33$cty ~ data33$drv)
# H0 : 전륜구동(f)이냐 후륜구동(r)이냐에 따른 도시 연비 차이가 없다.
# H1 : 전륜구동(f)이냐 후륜구동(r)이냐에 따른 도시 연비 차이가 있다.
t.test(data31$cty, data32$cty,  var.equal = F)
# H0 : 분산의 차이다 없다, H1 : 분산의 차이가 있다
var.test(data23$hwy ~ data23$class)
# H0 : subcompact 자동차와 midsize 자동차의 고속도로 연비 차이가 없다.
# H1 : subcompact 자동차와 midsize 자동차의 고속도로 연비 차이가 있다.
t.test(data21$hwy, data12$displ,  var.equal = F)
x <- seq(0,15,by = 0.01)
dc <- dchisq(x, df = 3)
alpha <- 0.05
tol <- qchisq(0.95, df = 3)
par(mar=c(0,1,1,1))
plot(x, dc, type = "l", axes = F,
ylim=c(-0.03,0.25), xlab = "", ylab="")
abline(h=0)
tol.g <- round(tol,2)
tol.g
qchisq(0.95, df = 3)
polygon(c(tol.g, x[x>tol.g], 15), c(0,dc[x>tol.g], 0), col="red")
text(0,-0.03,"0",cex = 0.8)
tol2 <- qchisq(1-0.95, df = 3)
tol2.g <- round(tol2,2)
polygon(c(tol.g, x[x>tol2.g], 15), c(0,dc[x>tol2.g], 0), col="blue")
text(0,-0.03,"0",cex = 0.8)
plot(x, dc, type = "l", axes = F,
ylim=c(-0.03,0.25), xlab = "", ylab="")
abline(h=0)
tol.g <- round(tol,2)
polygon(c(tol.g, x[x>tol.g], 15), c(0,dc[x>tol.g], 0), col="red")
qchisq(1-0.95, df = 3)
sns.c <- read.csv("snsbyage.csv")
View(sns.c)
sns.c <- read.csv("snsbyage.csv")
sns.c <- transform(sns.c, age.c = factor(age, levels = c(1,2,3)))
sns.c <- transform(sns.c, service.c = factor(service, levels = c("F","T","K","C","E"), ordered = TRUE))
sns.c
c.tab <- table(sns.c$age.c, sns.c$service.c)
c.tab
class(c.tab)
class(c.tab$T)
chisq.test(c.tab)
ct <- chisq.test(c.tab)
names(ct)
"statistic"
names(ct)
ct$p.value
ct$method
ct
UCBAdmissions
UCBAdmissions
class(UCBAdmissions)
ab <- UCBAdmissions
table(ab$F$Gender)
margin.table(ab, margin = 1)
margin.table(ab, margin = 2)
abc <- table(a,b)
a <- margin.table(ab, margin = 1)
b <- margin.table(ab, margin = 2)
abc <- table(a,b)
abc
a <- margin.table(ab, margin = 1)
b <- margin.table(ab, margin = 2)
a
b <- margin.table(ab, margin = 2)
b
abc <- table(a$Admit, b$Gender)
sns.c <- read.csv("snsbyage.csv")
sns.c <- transform(sns.c, age.c = factor(age, levels = c(1,2,3)))
sns.c <- transform(sns.c, service.c = factor(service, levels = c("F","T","K","C","E"), ordered = TRUE))
sns.c <- read.csv("snsbyage.csv")
sns.c <- transform(sns.c, age.c = factor(age, levels = c(1,2,3)))
sns.c <- transform(sns.c, service.c = factor(service, levels = c("F","T","K","C","E"), ordered = TRUE))
sns.c
abc <- apply(ab, c(1,2), sum)
ab <- UCBAdmissions
abc <- apply(ab, c(1,2), sum)
abc
a <- margin.table(ab, margin = 1)
b <- margin.table(ab, margin = 2)
a
b
chisq.test(abc)
ab
View(abc)
ab <- UCBAdmissions
View(UBCAdmissions)
table(ab)
abbb<-table(ab)
abbb
data <-UCBAdmissions
View(data)
c1 <- c(5,7,6,8,6,7,8,8,6,10)
c2 <- c(6,8,9,11,13,12,10,8,9,10)
c3 <- c(14,25,26,18,19,22,21,16,20,30)
c1 <- c(5,7,6,8,6,7,8,8,6,10)
c2 <- c(6,8,9,11,13,12,10,8,9,10)
c3 <- c(14,25,26,18,19,22,21,16,20,30)
data <- data.frame(1 = c1, 2 = c2, 3 = c3)
data <- data.frame(1 == c1, 2 == c2, 3 == c3)
data
c1
c2
data <- data.frame("1" == c1, "2" == c2, "3" == c3)
data
data <- data.frame("1" == c1, "2" == c2, "3" == c3)
data
data <- data.frame(c1, c2,c3)
data
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
anova(data)
anova(data$c1,data$c2,data$c3)
library(dplyr)
c1 <- mutate(c1, h = 1)
mutate(c1, h = 1)
mutate(c1, h = "1")
mutate(c1, h == 1)
mutate(c1, h == 1)
c1 %>%
mutate(c1, h == 1)
source('D:/Workspace/R-Statistics/[과제11_2] 조병무.R', encoding = 'UTF-8', echo=TRUE)
c1
data <- data.frame(c1, c2,c3)
data
c1 <- data.frame(c1)
c1
c1 <- mutate(c1, h = 1)
c1
c1 <- c(5,7,6,8,6,7,8,8,6,10)
c1 <- data.frame(c1)
c1 <- mutate(c1, h = 1)
c2 <- c(6,8,9,11,13,12,10,8,9,10)
c2 <- data.frame(c2)
c2 <- mutate(c2, h = 2)
c3 <- c(14,25,26,18,19,22,21,16,20,30)
c3 <- data.frame(c3)
c3 <- mutate(c3, h = 3)
rbind(c1,c2,c3)
c3
rbind(c1,c2)
library(plyr)
rbind(c1,c2,c3)
c1
c2
c3
c3
rename(c1, c3 = p)
rename(c1, c3 == p)
rename(c1, p == c1)
names(c1)[1], c("p")
names(c1)[1] <- c("p")
View(c1)
names(c2)[1] <- c("p")
names(c3)[1] <- c("p")
rbind(c1,c2,c3)
data1 <- rbind(c1,c2,c3)
data2 <- lm(h ~ p, data=data1)
anova(data2)
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
anova(data2)
anova(data1)
data1
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
data2
data2 <- lm(p ~ h, data=data1)
data2
class(data1$h)
class(data1$h)
class(data1$p)
data1
c1 <- c(5,7,6,8,6,7,8,8,6,10)
c1 <- data.frame(c1)
c1 <- mutate(c1, h = "1")
names(c1)[1] <- c("p")
c2 <- c(6,8,9,11,13,12,10,8,9,10)
c2 <- data.frame(c2)
c2 <- mutate(c2, h = "2")
names(c2)[1] <- c("p")
c3 <- c(14,25,26,18,19,22,21,16,20,30)
c3 <- data.frame(c3)
c3 <- mutate(c3, h = "3")
names(c3)[1] <- c("p")
data1 <- rbind(c1,c2,c3)
class(data1$h)
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
anova(data2)
d1 <- c(15.5,14.3,16.3,13.5,15.7,16.4,14.7)
d1 <- data.frame(d1)
d1 <- mutate(d1, h = "A")
names(d1)[1] <- c("p")
d2 <- c(14.7,16.3,15.5,15.2,16.3,13.5,15.4)
d2 <- data.frame(d2)
d2 <- mutate(d2, h = "B")
names(d2)[1] <- c("p")
d3 <- c(15.5,13.2,16.5,15.7,15.3,15.2,14.8)
d3 <- data.frame(d3)
d3 <- mutate(d3, h = "C")
names(d3)[1] <- c("p")
data3 <- rbind(d1,d2,d3)
class(datad$h)
class(data$h)
class(data3$h)
d1
# H0 = 3개 채소의 가격이 같다.
# H1 = 3개 채소의 가격이 같지 않다.
data4 <- lm(p ~ h, data=data3)
anova(data4)
library(prob)
pbinom(16, 80, 0.15)
pbinom(16, 80, 0.15)
prop.test(x=16, n = 80 ,p= 0.15, correct = FALSE)
prop.test(x=16, n = 80 , correct = FALSE)
chisq.test(x=16, n = 80, p=0.15)
chisq.test(x=16, n = 80, p=0.15, correct = FALSE)
prop.test(x=16, n = 80 , correct = FALSE, conf.level = 0.95)
# H0 = p = 0.15
# H1 = p != 0.15
chisq.test(0.15)
# H0 = p = 0.15
# H1 = p != 0.15
chisq.test(0.95, df=1)
# H0 = p = 0.15
# H1 = p != 0.15
chisq.test(0.95,1)
chisq.test(0.95,1)
# H0 = p = 0.15
# H1 = p != 0.15
chisq.test(p= 0.95, df =1)
# H0 = p = 0.15
# H1 = p != 0.15
chisq.test(p= 0.95, df ==1)
prop.test(p=0.95, df = 1)
prop.test(x=16, n = 80 , correct = FALSE, conf.level = 0.95)
qt(df = 1, 0.95)
qt(df = 1, 0.15)
qt(df = 1, 0.05)
qt(df = 1, 0.05)
qt(df = 1, 0.95)
chisq.test(df = 1, 0.95)
chisq.test(1, 0.95)
1 - qt(df = 1, 0.95)
1 - qt(df = 1, 0.05)
qt(df = 1, 0.05)
prop.test(df= 1, p= 0.05)
prop.test(x=16, n = 80 , correct = FALSE, conf.level = 0.95)
sns.c <- read.csv("snsbyage.csv")
sns.c <- transform(sns.c, age.c = factor(age, levels = c(1,2,3)))
sns.c <- transform(sns.c, service.c = factor(service, levels = c("F","T","K","C","E"), ordered = TRUE))
c.tab <- table(sns.c$age.c, sns.c$service.c)
c.tab
sns.c <- read.csv("snsbyage.csv")
sns.c
sns.c <- transform(sns.c, age.c = factor(age, levels = c(1,2,3)))
sns.c
sns.c <- transform(sns.c, service.c = factor(service, levels = c("F","T","K","C","E"), ordered = TRUE))
sns.c
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
anova(data2)
d1 <- c(15.5,14.3,16.3,13.5,15.7,16.4,14.7)
d1 <- data.frame(d1)
d1 <- mutate(d1, h = "A")
names(d1)[1] <- c("p")
d2 <- c(14.7,16.3,15.5,15.2,16.3,13.5,15.4)
d2 <- data.frame(d2)
d2 <- mutate(d2, h = "B")
names(d2)[1] <- c("p")
d3 <- c(15.5,13.2,16.5,15.7,15.3,15.2,14.8)
d3 <- data.frame(d3)
d3 <- mutate(d3, h = "C")
names(d3)[1] <- c("p")
data3 <- rbind(d1,d2,d3)
data3
e1 <- c(23,31,13)
e1 <- eata.frame(e1)
e1 <- mutate(e1, h = "반병 이상")
names(e1)[1] <- c("p")
e2 <- c(21,48,23)
e2 <- eata.frame(e2)
e2 <- mutate(e2, h = "반병 이하")
names(e2)[1] <- c("p")
e3 <- c(63,159,119)
e3 <- eata.frame(e3)
e3 <- mutate(e3, h = "못마심")
e1
e1 <- data.frame(e1)
e1 <- mutate(e1, h = "반병 이상")
names(e1)[1] <- c("p")
e2 <- c(21,48,23)
e2 <- data.frame(e2)
e2 <- mutate(e2, h = "반병 이하")
names(e2)[1] <- c("p")
e3 <- c(63,159,119)
e3 <- data.frame(e3)
e3 <- mutate(e3, h = "못마심")
names(e3)[1] <- c("p")
e1
e1 <- c(23,31,13)
e1 <- data.frame(e1)
names(e1)[1] <- c("1갑이상")
e2 <- c(21,48,23)
e2 <- data.frame(e2)
names(e2)[1] <- c("1갑이하")
e3 <- c(63,159,119)
e3 <- data.frame(e3)
names(e3)[1] <- c("안피움")
e1
cbind(e1,e2,e3)
rownames(e5) = c("반병이상","반병이하","못마심")
e5 <- cbind(e1,e2,e3)
rownames(e5) = c("반병이상","반병이하","못마심")
e5
chisq.test(e5)
# H0 = p = 0.15
# H1 = p != 0.15
chisq.test(p= 0.95, df ==1)
chisq.test(df = 1, 0.95)
prop.test(df= 1, p= 0.05)
prop.test(x=16, n = 64 , correct = FALSE)
d <- c(64, 16)
chisq.test(d, p = c(0.85, 0.15))
dchisq(1)
dchisq(df= 1)
dchisq(df= 1, p = 0.05)
dchisq(1,0.05)
dchisq(0.05,1)
qchisq(0.95,1)
chisq.test(c(64,16), p = c(0.85, 0.15))
qchisq(0.95,1)
qchisq(0.95,1)
chisq.test(c(64,16), p = c(0.85, 0.15))
library(dplyr)
library(plyr)
c1 <- c(5,7,6,8,6,7,8,8,6,10)
c1 <- data.frame(c1)
c1 <- mutate(c1, h = "1")
names(c1)[1] <- c("p")
c2 <- c(6,8,9,11,13,12,10,8,9,10)
c2 <- data.frame(c2)
c2 <- mutate(c2, h = "2")
names(c2)[1] <- c("p")
c3 <- c(14,25,26,18,19,22,21,16,20,30)
c3 <- data.frame(c3)
c3 <- mutate(c3, h = "3")
names(c3)[1] <- c("p")
data1 <- rbind(c1,c2,c3)
class(data1$h)
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
anova(data2)
d1 <- c(15.5,14.3,16.3,13.5,15.7,16.4,14.7)
d1 <- data.frame(d1)
d1 <- mutate(d1, h = "A")
names(d1)[1] <- c("p")
d2 <- c(14.7,16.3,15.5,15.2,16.3,13.5,15.4)
d2 <- data.frame(d2)
d2 <- mutate(d2, h = "B")
names(d2)[1] <- c("p")
d3 <- c(15.5,13.2,16.5,15.7,15.3,15.2,14.8)
d3 <- data.frame(d3)
d3 <- mutate(d3, h = "C")
names(d3)[1] <- c("p")
data3 <- rbind(d1,d2,d3)
class(data3$h)
# H0 = 3개 채소의 가격이 같다.
# H1 = 3개 채소의 가격이 같지 않다.
data4 <- lm(p ~ h, data=data3)
anova(data4)
anova(data4)
library(prob)
# H0 = p = 0.15
# H1 = p != 0.15
qchisq(0.95,1)
chisq.test(c(64,16), p = c(0.85, 0.15))
e1 <- c(23,31,13)
e1 <- data.frame(e1)
names(e1)[1] <- c("1갑이상")
e2 <- c(21,48,23)
e2 <- data.frame(e2)
names(e2)[1] <- c("1갑이하")
e3 <- c(63,159,119)
e3 <- data.frame(e3)
names(e3)[1] <- c("안피움")
e5 <- cbind(e1,e2,e3)
rownames(e5) = c("반병이상","반병이하","못마심")
# H0 = 음주량과 흡연량 사이에 연관이 있다.
# H1 = 음주량과 흡연량 사이에 연관이 없다.
chisq.test(e5)
ata20 <- mpg
ata20 <- mpg
library(ggplot2)
ata20 <- mpg
data30 <- filter(data20, data20$class == 'subcompact')
ata20 <- mpg
data30 <- filter(data20, data20$class == 'subcompact')
data31 <- filter(data30, data30$drv == 'r')
library(dplyr)
ata20 <- mpg
data30 <- filter(data20, data20$class == 'subcompact')
ata20 <- mpg
data30 <- filter(data20, data20$class == 'subcompact')
data20 <- mpg
data30 <- filter(data20, data20$class == 'subcompact')
data31 <- filter(data30, data30$drv == 'r')
data32 <- filter(data30, data30$drv == 'f')
data33 <- rbind(data31, data32)
data20 <- mpg
data30 <- filter(data20, data20$class == 'subcompact')
data30
data20 <- mpg
data20
data30 <- filter(data20, data20$class == 'subcompact')
data30 <- filter(data20, data20$class == 'subcompact')
data31 <- filter(data30, data30$drv == 'r')
data32 <- filter(data30, data30$drv == 'f')
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
anova(data2)
d1 <- c(15.5,14.3,16.3,13.5,15.7,16.4,14.7)
d1 <- data.frame(d1)
d1 <- mutate(d1, h = "A")
names(d1)[1] <- c("p")
d2 <- c(14.7,16.3,15.5,15.2,16.3,13.5,15.4)
d2 <- data.frame(d2)
d2 <- mutate(d2, h = "B")
names(d2)[1] <- c("p")
d3 <- c(15.5,13.2,16.5,15.7,15.3,15.2,14.8)
d3 <- data.frame(d3)
d3 <- mutate(d3, h = "C")
names(d3)[1] <- c("p")
data3 <- rbind(d1,d2,d3)
class(data3$h)
# H0 = 3개 채소의 가격이 같다.
# H1 = 3개 채소의 가격이 같지 않다.
data4 <- lm(p ~ h, data=data3)
anova(data4)
# H0 = 3개 채소의 가격이 같다.
# H1 = 3개 채소의 가격이 같지 않다.
data4 <- lm(p ~ h, data=data3)
library(dplyr)
library(plyr)
c1 <- c(5,7,6,8,6,7,8,8,6,10)
c1 <- data.frame(c1)
c1 <- mutate(c1, h = "1")
names(c1)[1] <- c("p")
c2 <- c(6,8,9,11,13,12,10,8,9,10)
c2 <- data.frame(c2)
c2 <- mutate(c2, h = "2")
names(c2)[1] <- c("p")
c3 <- c(14,25,26,18,19,22,21,16,20,30)
c3 <- data.frame(c3)
c3 <- mutate(c3, h = "3")
names(c3)[1] <- c("p")
data1 <- rbind(c1,c2,c3)
class(data1$h)
# H0 = 3개 호수의 산소량이 같다
# H1 = 3개 호수의 산소량이 같지 않다.
data2 <- lm(p ~ h, data=data1)
anova(data2)
anova(data2)
data2
data1 <- rbind(c1,c2,c3)
class(data1$h)
data1
data1
data2
